@using Ididit.Data

<Addons Flex=Flex.NoWrap>
    <TextEdit Size="Size" Text="@_searchFilter" TextChanged="SearchFilterChanged" Placeholder="@Localizer["Search"]" />

    <Addon AddonType="AddonType.End">
        <Button Color="Color.Primary" Outline="true" Size="Size" @onclick="ClearSearchFilter"><Icon Class="fa-fw" Name="IconName.Times" /></Button>
    </Addon>
</Addons>

<Field Margin=Margin.Is0.Is2.FromTop>
    <FieldLabel Margin=Margin.Is0>@Localizer["Date filter"]:</FieldLabel>

    <Addons Flex=Flex.NoWrap>
        <DateEdit TValue="DateTime?" Size="Size" Date="_dateFilter" DateChanged="OnDateChanged" />

        <Addon AddonType="AddonType.End">
            <Button Color="Color.Primary" Outline="true" Size="Size" @onclick="ClearDateFilter"><Icon Class="fa-fw" Name="IconName.Times" /></Button>
        </Addon>
    </Addons>

    <CheckBox Checked="IsTodayChecked" CheckedChanged="TodayCheckedChanged">@Localizer["Today"]</CheckBox>
</Field>

<Field Margin=Margin.Is0.Is2.FromTop>
    <CheckBox Checked="Settings.HideCompletedTasks" CheckedChanged="OnHideCompletedTasksChanged">@Localizer["Hide completed tasks"]</CheckBox>
</Field>

<Field Margin=Margin.Is0.Is2.FromTop>
    <FieldLabel Margin=Margin.Is0>
        <CheckBox Checked="Settings.ShowElapsedToDesiredRatioOverMin" CheckedChanged="OnShowElapsedToDesiredRatioOverMinChanged">@Localizer["Show tasks with ratio over"] @Settings.ElapsedToDesiredRatioMin %</CheckBox>
    </FieldLabel>
    <Slider Size="Size" Class="custom-range" TValue="long" Min="0" Max="100" Step="5" Value="Settings.ElapsedToDesiredRatioMin" ValueChanged="OnElapsedToDesiredRatioMinChanged" />
</Field>

<Field Margin=Margin.Is0.Is2.FromTop>
    <FieldLabel Margin=Margin.Is0>@Localizer["Filter by priority"]:</FieldLabel>

    @foreach (Priority priority in Enum.GetValues<Priority>())
    {
        <CheckBox Checked="GetShowPriority(priority)" CheckedChanged="(show) => OnShowPriorityChanged(priority, show ?? false)">@Localizer[priority.GetDescription()]</CheckBox>
    }
</Field>

<Field Margin=Margin.Is0.Is2.FromTop>
    <FieldLabel Margin=Margin.Is0>@Localizer["Filter by type"]:</FieldLabel>

    @foreach (TaskKind taskKind in Enum.GetValues<TaskKind>())
    {
        <CheckBox Checked="GetShowTaskKind(taskKind)" CheckedChanged="(show) => OnShowTaskKindChanged(taskKind, show ?? false)">@Localizer[taskKind.GetDescription()]</CheckBox>
    }
</Field>

<Field Margin=Margin.Is0.Is2.FromTop>
    <FieldLabel Margin=Margin.Is0>@Localizer["Sort by"]:</FieldLabel>

    @if (IsApple)
    {
        <select class="form-select" value="@Settings.Sort" @onchange="OnSortChangeEvent">
            @foreach (Sort sort in Enum.GetValues<Sort>())
            {
                <option value="@sort">@Localizer[sort.GetDescription()]</option>
            }
        </select>
    }
    else
    {
        <Select TValue="Sort" Size="Size" SelectedValue="Settings.Sort" SelectedValueChanged="OnSortChanged">
            @foreach (Sort sort in Enum.GetValues<Sort>())
            {
                <SelectItem Value="sort">@Localizer[sort.GetDescription()]</SelectItem>
            }
        </Select>
    }
</Field>
